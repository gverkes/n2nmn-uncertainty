(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is square (below circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (right_of circle))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (above green))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is green (left_of (above green)))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is blue (left_of red))
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is red green)
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is blue (below square))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is green (left_of (above square)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is square (left_of (right_of green)))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is red (right_of blue))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is green (right_of (above green)))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is square (left_of circle))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is circle (left_of blue))
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is blue green)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is green red)
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
(is circle (below (left_of blue)))
